{
  "openapi": "3.0.1",
  "info": {
    "title": "Open Referrals API(Cast Project)",
    "description": "Allows users to query Orgs, Services and Locations. Data can be added easily using the related OpenReferralUI project to sign up and add data.",
    "contact": {
      "name": "Catalyst",
      "url": "https://www.thecatalyst.org.uk/",
      "email": "support@wearecast.org.uk"
    },
    "version": "v1"
  },
  "paths": {
    "/KeyContact/{orgId}": {
      "get": {
        "tags": [
          "KeyContact"
        ],
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/KeyContact/admin/{orgId}": {
      "get": {
        "tags": [
          "KeyContact"
        ],
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/KeyContact/admin/confirm/{orgId}/{userId}": {
      "get": {
        "tags": [
          "KeyContact"
        ],
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/KeyContact/admin/requests": {
      "get": {
        "tags": [
          "KeyContact"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/KeyContact/delete": {
      "delete": {
        "tags": [
          "KeyContact"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KeyContacts"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/KeyContacts"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/KeyContacts"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/KeyContact": {
      "get": {
        "tags": [
          "KeyContact"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/KeyContact/orgs-i-can-manage": {
      "get": {
        "tags": [
          "KeyContact"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/KeyContact/orgs-i-have-requested-to-join": {
      "get": {
        "tags": [
          "KeyContact"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/KeyContact/orgs/{orgId}/contacts": {
      "get": {
        "tags": [
          "KeyContact"
        ],
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Locations": {
      "get": {
        "tags": [
          "Locations"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Locations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Location"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Location"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Location"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Locations/{id}": {
      "get": {
        "tags": [
          "Locations"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Locations"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Location"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Location"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Location"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/OrganizationMember/my/requests": {
      "get": {
        "tags": [
          "OrganizationMember"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/OrganizationMember/admin/requests": {
      "get": {
        "tags": [
          "OrganizationMember"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/OrganizationMember/create/{orgId}": {
      "get": {
        "tags": [
          "OrganizationMember"
        ],
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/OrganizationMember/pending/{orgId}": {
      "get": {
        "tags": [
          "OrganizationMember"
        ],
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/OrganizationMember/all/joined": {
      "get": {
        "tags": [
          "OrganizationMember"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/OrganizationMember/all/{orgId}": {
      "get": {
        "tags": [
          "OrganizationMember"
        ],
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/OrganizationMember/grant/{orgId}/{userId}": {
      "get": {
        "tags": [
          "OrganizationMember"
        ],
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/OrganizationMember/revoke/{orgId}/{userId}": {
      "get": {
        "tags": [
          "OrganizationMember"
        ],
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/OrganizationMember/deny/{orgId}/{userId}": {
      "get": {
        "tags": [
          "OrganizationMember"
        ],
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Organizations": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Get All Services",
        "parameters": [
          {
            "name": "text",
            "in": "query",
            "description": "The postcode of the person who wishes to use the service. In order to find services that are within a reasonable distance.",
            "schema": {
              "type": "string",
              "description": "The postcode of the person who wishes to use the service. In order to find services that are within a reasonable distance.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Organizations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Organisation"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Organisation"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Organisation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Organizations/{id}": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Organisation"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Organisation"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Organisation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Playlist": {
      "get": {
        "tags": [
          "Playlist"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Playlist"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Playlist"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Playlist"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Playlist"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Services": {
      "get": {
        "tags": [
          "Services"
        ],
        "summary": "Get All Services",
        "parameters": [
          {
            "name": "postcode",
            "in": "query",
            "description": "Use text to perform a keyword search on services. This performs a full text search on the service title.",
            "schema": {
              "type": "string",
              "description": "Use text to perform a keyword search on services. This performs a full text search on the service title.",
              "nullable": true
            }
          },
          {
            "name": "proximity",
            "in": "query",
            "description": "The distance in metres that the person is willing to travel from the target postcode.",
            "schema": {
              "type": "number",
              "description": "The distance in metres that the person is willing to travel from the target postcode.",
              "format": "double",
              "nullable": true
            }
          },
          {
            "name": "text",
            "in": "query",
            "description": "The postcode of the person who wishes to use the service. In order to find services that are within a reasonable distance.",
            "schema": {
              "type": "string",
              "description": "The postcode of the person who wishes to use the service. In order to find services that are within a reasonable distance.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Services"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Service"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Service"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Service"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Services/{id}": {
      "get": {
        "tags": [
          "Services"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Services"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Service"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Service"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Service"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Services/{id}/validate": {
      "get": {
        "tags": [
          "Services"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Services/validate": {
      "post": {
        "tags": [
          "Services"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Services/richness": {
      "get": {
        "tags": [
          "Services"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Services"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Services/{id}/richness": {
      "get": {
        "tags": [
          "Services"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "KeyContacts": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "orgId": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "userEmail": {
            "type": "string",
            "nullable": true
          },
          "isAdmin": {
            "type": "boolean"
          },
          "isPending": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PhysicalAddress": {
        "required": [
          "postal_Code"
        ],
        "type": "object",
        "properties": {
          "address_1": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "locationId": {
            "type": "string",
            "nullable": true
          },
          "postal_Code": {
            "pattern": "(GIR 0AA)|((([A-Z-[QVX]][0-9][0-9]?)|(([A-Z-[QVX]][A-Z-[IJZ]][0-9][0-9]?)|(([A-Z-[QVX]][0-9][A-HJKSTUW])|([A-Z-[QVX]][A-Z-[IJZ]][0-9][ABEHMNPRVWXY])))) [0-9][A-Z-[CIKMOV]]{2})",
            "type": "string"
          },
          "state_Province": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Location": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "name": {
            "type": "string"
          },
          "physical_Addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhysicalAddress"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Organisation": {
        "required": [
          "description",
          "id",
          "name",
          "url"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "charityNumber": {
            "type": "integer",
            "format": "int32"
          },
          "servicesIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri"
          }
        },
        "additionalProperties": false
      },
      "Playlist": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "services": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServiceAtLocation": {
        "required": [
          "id",
          "location_Id",
          "service_Id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "location_Id": {
            "type": "string"
          },
          "service_Id": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RegularSchedule": {
        "type": "object",
        "properties": {
          "byDay": {
            "type": "string",
            "nullable": true
          },
          "byMonthDay": {
            "type": "string",
            "nullable": true
          },
          "closes_At": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "dtStart": {
            "type": "string",
            "nullable": true
          },
          "freq": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "interval": {
            "type": "string",
            "nullable": true
          },
          "opens_At": {
            "type": "string",
            "format": "date-time"
          },
          "service": {
            "$ref": "#/components/schemas/Service"
          },
          "service_At_Location": {
            "$ref": "#/components/schemas/ServiceAtLocation"
          },
          "valid_From": {
            "type": "string",
            "format": "date-time"
          },
          "valid_To": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Service": {
        "required": [
          "description",
          "email",
          "id",
          "name",
          "url"
        ],
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "organizationId": {
            "type": "string",
            "nullable": true
          },
          "regular_Schedules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegularSchedule"
            },
            "nullable": true
          },
          "service_At_Locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceAtLocation"
            },
            "nullable": true
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "category": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. \\r\\n\\r\\n \r\n                      Enter 'Bearer' [space] and then your token in the text input below.\r\n                      \\r\\n\\r\\nExample: 'Bearer 12345abcdef'",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}