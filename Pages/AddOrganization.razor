@page "/add-organization"

@using OpenReferralPOV.Data
@using OpenReferralPOV.Services
@using System.Net.Http

@inject IOpenReferralOrganisationService ReferralService
@inject NavigationManager NavManager


<div class="content-container">
    <div class="gridder">
        @if (orgCreated)
        {
            <StatusMessage messageType="success" message="Organisation created" />
            NavManager.NavigateTo($"manage-organisation/{organization.Id}", true);

        }
        else
        {
            <EditForm Model="@organization" OnValidSubmit="@HandleValidSubmit">

                <h2>Add Organisation</h2>
                @if (@httpError != null)
                {
                    <HTTPErrorMessage message=@httpError.StatusCode.ToString() />
                }
                @if (validationError != null)
                {
                    <ErrorValidationMessage Error=@validationError />
                }
                <DataAnnotationsValidator />

                <label for="Name">Name</label>
                <ValidationMessage For="@(() => organization.Name)" />
                <InputText id="Name" @bind-Value="@organization.Name" type="text" />

                <label for="Description">Description</label>
                <ValidationMessage For="@(() => organization.Description)" />
                <InputText id="Description" @bind-Value="@organization.Description" type="text" />

                <label for="isCharity">Is your organisation a charity?</label>
                <InputCheckbox @bind-Value="@isCharity" id="isCharity" />

                @if (isCharity)
                {
                    <label for="Charity Number">Charity Number</label>
                    <ValidationMessage For="@(() => organization.CharityNumber)" />

                    <InputNumber id="CharityNumber" @bind-Value="@organization.CharityNumber" />
                }

                <label for="Url">URL</label>
                <ValidationMessage For="@(() => organization.Url)" />
                <InputText id="Url" @bind-Value="@organization.Url" type="text" />

                @if (@httpError != null)
                {
                    <warn>There was an error submiting the form</warn>
                    <br />
                    <warn>@httpError.StatusCode</warn>
                }
                @if (validationError != null)
                {
                    <ErrorValidationMessage Error=@validationError />
                }
                <button type="submit">Submit</button>
            </EditForm>
        }
    </div>
</div>

@code {
    [CascadingParameter]
    Error Error { get; set; }
    HttpRequestException httpError { get; set; }
    ValidationError validationError { get; set; }
    public Organization organization { get; set; } = new Organization();
    public bool orgCreated { get; set; } = false;
    public bool isCharity { get; set; } = false;

    private async Task HandleValidSubmit()
    {
        try
        {
            httpError = null;
            validationError = null;

            if (!isCharity) { organization.CharityNumber = 0; }

            organization = await ReferralService.AddOrganization(organization);
            orgCreated = true;
        }
        catch (ValidationError e)
        {
            validationError = e;
        }
        catch (HttpRequestException e)
        {
            httpError = e;
        }
        catch (Exception e)
        {
            Error.ProcessError(e);
        }
    }
}
