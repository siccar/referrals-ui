@page "/organizations"

@using OpenReferralPOV.Data
@using OpenReferralPOV.Services

@inject IOpenReferralOrganisationService OrgService
@inject IOpenReferralKeyContactService KeyContactService

<h1>Organizations</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (organizations == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <p></p>
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th>Charity Number</th>
                <th>Web Url</th>
                <th>Request to Join</th>
                <th>Request to Administer</th>
                @if (KeyContacts.Count() > 0)
                {
                    <th>Manage Org</th>
                }

            </tr>
        </thead>
        <tbody>
            @foreach (var org in organizations)
            {
                <tr>
                    <td>@org.Name</td>
                    <td>@org.Description</td>
                    <td>@org.CharityNumber</td>
                    <td>@org.Url</td>
                    <td>
                        <input type="button" name="Request to Join" class="button1" value="@org.RequestToJoinStatusMessage"
                               @onclick="@(e => HandleRequestToJoin(org))" />
                    </td>
                    <td>
                        <input type="button" name="Request to Administer" class="button1" value="@org.RequestToAdminister"
                               @onclick="@(e => HandleRequestToBecomeAdmin(org))" />
                    </td>
                    @if (KeyContacts.Where(x => x.OrgId == org.Id).Count() > 0)
                    {
                        <td>
                            <NavLink class="nav-link" href=@($"manage-organisation/{org.Id}")>
                                <span class="oi oi-list-rich" aria-hidden="true"></span> Manage Org
                            </NavLink>
                        </td>
                    }
                    else
                    {
                        <td></td>
                    }
                </tr>
            }
        </tbody>
    </table>
}

@code {


    private IEnumerable<Organization> organizations;
    private IEnumerable<KeyContact> KeyContacts;

    protected override async Task OnInitializedAsync()
    {
        organizations = await OrgService.GetAllOrganisations();
        KeyContacts = await KeyContactService.GetOrgsICanManage();
    }

    protected async Task HandleRequestToJoin(Organization org)
    {
        await OrgService.RequestToJoinOrganisationAsMember(org.Id);
        org.RequestToJoinStatusMessage = "Request Sent";
    }

    protected async Task HandleRequestToBecomeAdmin(Organization org)
    {
        await OrgService.RequestToJoinOrganisationAsAdmin(org.Id);
        org.RequestToAdminister = "Request Sent";
    }
}