@page "/manage-organisation/{OrgId}"
@using OpenReferralPOV.Data
@using OpenReferralPOV.Services

@inject IOpenReferralOrganisationService OrgService
@inject IOpenReferralMembershipRequestsService MemberService
@inject IOpenReferralKeyContactService KeyContactService

@if (orgUpdated)
{
    <h3>Organization Updated</h3>
}
else
{
    <EditForm Model="@organization" OnValidSubmit="@HandleValidSubmit">

        <h3>Manage Organization</h3>

        <label for="Name">Name</label>
        <InputText id="Name" @bind-Value="@organization.Name" />

        <label for="Description">Description</label>
        <InputText id="Description" @bind-Value="@organization.Description" />

        <label for="Charity Number">Charity Number</label>
        <InputNumber id="CharityNumber" @bind-Value="@organization.CharityNumber" />

        <label for="Url">Url</label>
        <InputText id="Url" @bind-Value="@organization.Url" />

        <button type="submit">Submit</button>
    </EditForm>


    <p>Admins/Key Contacts of the Organisation</p>
    <table class="table">
        <thead>
            <tr>
                <th>User Email</th>
                <th>Is Admin</th>
                <th>Is Pending</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var contact in keyContacts)
            {
                <tr>
                    <td>@contact.UserEmail</td>
                    <td>@contact.IsAdmin</td>
                    <td>@contact.IsPending</td>
                </tr>
            }
        </tbody>
    </table>

    <p>Members of the  Organisation</p>
    <table class="table">
        <thead>
            <tr>
                <th>User Email</th>
                <th>Membership Status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var member in Memberships)
            {
            <tr>
                <td>@member.Email</td>
                <td>@member.Status</td>
            </tr>
            }
        </tbody>
    </table>

}

@code {

    [Parameter]
    public string OrgId { get; set; }

    public bool orgUpdated { get; set; } = false;

    public Organization organization { get; set; } = new Organization();

    public IEnumerable<KeyContact> keyContacts = new List<KeyContact>();

    public IEnumerable<MembershipRequests> Memberships = new List<MembershipRequests>();


    protected override async Task OnInitializedAsync()
    {
        organization = await OrgService.GetOrganisation(OrgId);
        keyContacts = await KeyContactService.GetKeyContactsForOrg(OrgId);
        Memberships = await MemberService.GetAllMembersOfOrg(OrgId);
    }


    private async Task HandleValidSubmit()
    {
        organization = await OrgService.UpdateOrganisation(organization);
        orgUpdated = true;
    }
}
