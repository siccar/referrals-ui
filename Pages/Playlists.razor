@page "/playlists"
@using OpenReferralPOV.Data
@using OpenReferralPOV.Services

@inject IOpenReferralPlaylistService PlaylistService
@inject IOpenReferralServiceFilterService ServiceFilterService
@inject IOpenReferralOrganisationService OrgService  // This needs replaced with the service collection once its ine

<h1>PlayLists</h1>

<p>This component will return the current Users Playlists.</p>
<p>This is not complete</p>

<EditForm Model="@SearchService" OnValidSubmit="@HandleSearchService">


    <label for="Postcode">Enter Postcode:</label><InputText id="Name" @bind-Value="@SearchService.Postcode" />
    <label for="Category">or </label>
    <InputSelect @bind-Value="@SearchService.SelectedCategory" class="form-control">
        @foreach (var cat in SearchService.Categories)
        {
            <option value="@cat">@cat</option>
        }
        }
    </InputSelect>
    <label for="SearchFor">Searching For</label>
    Services
    <input type="checkbox" checked />
    
    Organisations
    <input type="checkbox" disabled/>
    <button type="submit">Search</button>
</EditForm>


@if (organizations == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <p><em>Playlist Options...</em></p>
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Add To Playlist</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var org in organizations)
            {
                <tr>
                    <td>@org.Name</td>
                    <td>
                        <input type="button" name="Add To Playlist" class="button1" value="Add"
                               @onclick="@(e => AddToPlaylist(org.Id))" />
                    </td>
                </tr>
            }
        </tbody>
    </table>
}


@if (Playlist == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <p><em>Your Playlist...</em></p>
    <table class="table">
        <thead>
            <tr>
                <th>Org Name</th>
                <th>Remove From Playlist</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var s in Playlist.Services)
            {
                <tr>
                    <td>@organizations.First(x => x.Id == s).Name</td>
                    <td>
                        <input type="button" name="Remove From Playlist" class="button1" value="Remove"
                               @onclick="@(e => RemoveFromPlaylist(s))" />
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    public Playlist Playlist { get; set; } = new Playlist();
    public ServiceFilter SearchService { get; set; } = new ServiceFilter();

    public IEnumerable<Organization> organizations;

    protected override async Task OnInitializedAsync()
    {
        Playlist = await PlaylistService.Get();
        organizations = await OrgService.GetAllOrganisations();
        SearchService = await ServiceFilterService.GetSearchFIlter();
    }
    private async Task AddToPlaylist(string id)
    {
        Playlist.Services.Add(id);
        Playlist = await PlaylistService.Update(Playlist);
    }

    private async Task RemoveFromPlaylist(string id)
    {
        Playlist.Services.Remove(id);
        Playlist = await PlaylistService.Update(Playlist);
    }

    private async Task HandleSearchService()
    {
        // Does this reload
        Playlist.Services = new List<string>();
    }

}
