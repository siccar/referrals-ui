@page "/myrequests"

@using OpenReferralPOV.Data
@using OpenReferralPOV.Services

@inject IOpenReferralOrganisationService OrgService
@inject IOpenReferralMembershipRequestsService MembershipRequests
@inject IOpenReferralKeyContactService KeyContactRequests

<h1>Membership Requests</h1>

@if (myrequeststojoin == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <p>My Requests to Join Organisations and there status</p>
    <table class="table">
        <thead>
            <tr>
                <th>Organisation</th>
                <th>Request Status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var membership in myrequeststojoin)
            {
                <tr>
                    <td>@organizations.First(x => x.Id == membership.OrgId).Name</td>
                    <td>@membership.Status</td>
                </tr>
            }
        </tbody>
    </table>

    <p>Join Requests for Orgs I am a Key Contact For</p>
    <table class="table">
        <thead>
            <tr>
                <th>Organisation</th>
                <th>User Email</th>
                <th>Accept</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var membership in joinRequestsICanAuthorise)
            {
                <tr>
                    <td>@organizations.First(x => x.Id == membership.OrgId).Name</td>
                    <td>@membership.Email</td>

                    <td>
                        <input type="button" name="Accept" class="button1" value="Accept"
                               @onclick="@(e => HandleGrantRequest(membership))" />

                        <input type="button" name="Reject" class="button1" value="Reject"
                               @onclick="@(e => HandleDenyRequest(membership))" />
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <p>Admin Requests for Orgs I am a Key Contact For</p>
    <table class="table">
        <thead>
            <tr>
                <th>Organisation</th>
                <th>User Email</th>
                <th>Accept / Reject</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var ar in adminRequestsICanAuthorise)
            {
            <tr>
                <td>@organizations.First(x => x.Id == ar.OrgId).Name</td>
                <td>@ar.UserEmail</td>
                <input type="button" name="Accept" class="button1" value="Accept"
                       @onclick="@(e => HandleAdminGrantRequest(ar.OrgId, ar.UserId))" />
            </tr>
            }
        </tbody>
    </table>
}

@code {


    private IEnumerable<Organization> organizations;
    private IEnumerable<MembershipRequests> myrequeststojoin;
    private IEnumerable<MembershipRequests> joinRequestsICanAuthorise;

    private IEnumerable<KeyContact> adminRequestsICanAuthorise;


    protected override async Task OnInitializedAsync()
    {
        organizations = await OrgService.GetAsync();
        myrequeststojoin = await MembershipRequests.GetAsync();
        joinRequestsICanAuthorise = (await MembershipRequests.GetOrgJoinRequests());
        adminRequestsICanAuthorise = await KeyContactRequests.GetPendingAdminRequests();
    }

    protected async Task HandleGrantRequest(MembershipRequests request)
    {
        await MembershipRequests.HandleGrantRequest(request);
    }

    protected async Task HandleDenyRequest(MembershipRequests request)
    {
        await MembershipRequests.HandleDenyRequest(request);
    }

    protected async Task HandleAdminGrantRequest(string orgId, string userId)
    {
        await KeyContactRequests.HandleAdminGrantRequest(orgId, userId);
    }
}